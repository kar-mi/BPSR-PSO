name: Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.0.0, v2.0.1, etc.

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run make

      - name: Get version from package.json
        id: package-version
        shell: pwsh
        run: |
          $version = (Get-Content package.json | ConvertFrom-Json).version
          echo "VERSION=$version" >> $env:GITHUB_OUTPUT

      - name: Find ZIP file
        id: find-zip
        shell: pwsh
        run: |
          $zipFile = Get-ChildItem -Path "out/make/zip/win32-x64/*.zip" | Select-Object -First 1
          echo "ZIP_PATH=$($zipFile.FullName)" >> $env:GITHUB_OUTPUT
          echo "ZIP_NAME=$($zipFile.Name)" >> $env:GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: BPSR PSO ${{ github.ref_name }}
          body: |
            ## BPSR PSO ${{ github.ref_name }}

            ### Installation
            1. Download the ZIP file below
            2. Extract to any folder
            3. Run `BPSR PSO.exe`

            ### Requirements
            - Windows 10/11 (x64)
            - Npcap driver (will prompt for installation if not found)

            ### Changes
            See the commit history for details.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find-zip.outputs.ZIP_PATH }}
          asset_name: ${{ steps.find-zip.outputs.ZIP_NAME }}
          asset_content_type: application/zip
