name: Build and Release

# This workflow only runs when a version tag is pushed (e.g., v2.8.0)
# For testing builds in PRs, see test-build.yml

on:
    push:
        tags:
            - 'v*' # Triggers on version tags like v1.0.0, v2.0.1, etc.

jobs:
  build:
    # Your build script targets win32, so we must use a Windows runner.
    runs-on: windows-latest 

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your required Node.js version
          cache: 'npm'

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üèóÔ∏è Run Build Script
        run: npm run build

      - name: üè∑Ô∏è Get Tag Name
        id: get_tag
        # Extracts the tag name (e.g., v1.0.0)
        run: echo "TAG_NAME=${{ github.ref_name }}" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        shell: powershell

      - name: Build Changelog
        id: build_changelog # <--- THIS ID IS CRITICAL
        uses: mikepenz/release-changelog-builder-action@v5 # Ensure you use a recent version
        with:
            # 1. Use COMMIT mode since you are committing directly to master
            mode: "COMMIT"
            # 2. Define the range for the changelog (from the previous tag to the current tag)
            # This setting is necessary for the action to compare the new tag against the last one.
            fromTag: ${{ github.ref_name }}~1 
            toTag: ${{ github.ref_name }}
        env:
            # 3. Requires a token to access Git history and tags
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Release Body
        id: prepare_body
        run: |
          HEADER="## BPSR PSO ${{ github.ref_name }}
          
          ### Installation
          1. Download the ZIP file below
          2. Extract to any folder
          3. Run \`BPSR PSO.exe\`
          
          ### Requirements
          - Windows 10/11 (x64)
          - Npcap driver (will prompt for installation if not found)
          - https://npcap.com/#download
          
          ### Changes"
          
          # Get the changelog output from the previous step
          CHANGELOG="${{ steps.build_changelog.outputs.changelog }}"
          
          # Combine the header and the changelog
          FULL_BODY="$HEADER
          
          $CHANGELOG"
          
          # Write the combined content to a file
          echo "$FULL_BODY" > RELEASE_BODY.md
          
          # Set the file path as an output for the next step
          echo "release_body_file=RELEASE_BODY.md" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: BPSR PSO ${{ github.ref_name }}
          # Use the file output from the previous step
          body_path: RELEASE_BODY.md
          files: |
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}