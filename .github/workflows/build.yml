name: Build and Release

on:
    push:
        tags:
            - 'v*' # Triggers on version tags like v1.0.0, v2.0.1, etc.

jobs:
    build:
        runs-on: windows-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'

            - name: Setup Python for node-gyp
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'

            - name: Setup MSBuild (Windows)
              uses: microsoft/setup-msbuild@v2

            - name: Cache Electron and node-gyp
              uses: actions/cache@v4
              with:
                  path: |
                      ${{ runner.temp }}\electron-cache
                      ${{ runner.temp }}\node-gyp
                      ~\AppData\Local\electron\Cache
                      ~\AppData\Local\node-gyp\Cache
                  key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-electron-

            - name: Install dependencies with retries
              run: |
                  $maxRetries = 3
                  $retryCount = 0
                  $success = $false

                  while (-not $success -and $retryCount -lt $maxRetries) {
                      try {
                          npm ci
                          $success = $true
                      } catch {
                          $retryCount++
                          if ($retryCount -lt $maxRetries) {
                              Write-Host "Install failed, retrying ($retryCount/$maxRetries)..."
                              Start-Sleep -Seconds 5
                          } else {
                              throw
                          }
                      }
                  }
              shell: pwsh
              env:
                  npm_config_build_from_source: true
                  ELECTRON_BUILDER_CACHE: ${{ github.workspace }}\.cache\electron-builder
                  ELECTRON_CACHE: ${{ runner.temp }}\electron-cache
                  npm_config_cache: ${{ runner.temp }}\npm-cache
                  GYP_MSVS_VERSION: 2022

            - name: Build application
              run: npm run build
              env:
                  npm_config_build_from_source: true
                  ELECTRON_BUILDER_CACHE: ${{ github.workspace }}\.cache\electron-builder
                  ELECTRON_CACHE: ${{ runner.temp }}\electron-cache
                  GYP_MSVS_VERSION: 2022
              continue-on-error: false

            - name: Get version from package.json
              id: package-version
              shell: pwsh
              run: |
                  $version = (Get-Content package.json | ConvertFrom-Json).version
                  echo "VERSION=$version" >> $env:GITHUB_OUTPUT

            - name: Find ZIP file
              id: find-zip
              shell: pwsh
              run: |
                  $zipFile = Get-ChildItem -Path "dist/*.zip" | Select-Object -First 1
                  echo "ZIP_PATH=$($zipFile.FullName)" >> $env:GITHUB_OUTPUT
                  echo "ZIP_NAME=$($zipFile.Name)" >> $env:GITHUB_OUTPUT

            - name: Generate Release Notes
              id: generate_notes
              uses: actions/github-script@v7
              with:
                  result-encoding: string
                  script: |
                      const { data: release } = await github.rest.repos.generateReleaseNotes({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        tag_name: context.ref.replace('refs/tags/', '')
                      });

                      const installationGuide = `## Installation
                      1. Download the ZIP file below
                      2. Extract to any folder
                      3. Run \`BPSR PSO.exe\`

                      ## Requirements
                      - Windows 10/11 (x64)
                      - Npcap driver (will prompt for installation if not found)
                      - Download Npcap: https://npcap.com/#download

                      ---

                      `;

                      const fullBody = installationGuide + release.body;
                      return fullBody;

            - name: Create Release
              id: create_release
              uses: softprops/action-gh-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }}
                  name: BPSR PSO ${{ github.ref_name }}
                  body: ${{ steps.generate_notes.outputs.result }}
                  draft: false
                  prerelease: false
                  files: ${{ steps.find-zip.outputs.ZIP_PATH }}
                  generate_release_notes: false
